{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#How pressure profile changes when you change different parameters in Darcy's LAW\n",
    "#Darcy's law - q = kh(DP)/(141.2uBln(re/rw))\n",
    "#- DP = (141.2quB/kh).ln(re/rw)\n",
    "# P = Pwf + DP(r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "# #TIPS to use the TOOL-\n",
    "# 1. Use only 2 cases to compare, which will give you a clearer picture. \n",
    "# 2. enter the same properties in both cases, except for which you want to see the effect of. \n",
    "# EXAMPLE- I wanted to see the effect of viscocity so i have changed nothing but viscocity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Enter the Properties\n",
      "\n",
      "Flow rate Q(STB/D)- 200\n",
      "\n",
      "Oil viscocity(cp)- 10\n",
      "\n",
      "Permeability(mD)- 150\n",
      "\n",
      "Reservoir thickness(ft)- 30\n",
      "\n",
      " Want to try again? (yes/no)-yes\n",
      "\n",
      " Enter the Properties\n",
      "\n",
      "Flow rate Q(STB/D)- 200\n",
      "\n",
      "Oil viscocity(cp)- 100\n",
      "\n",
      "Permeability(mD)- 150\n",
      "\n",
      "Reservoir thickness(ft)- 30\n",
      "\n",
      " Want to try again? (yes/no)-no\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ans = 'yes'\n",
    "p = []\n",
    "while ans.lower() == 'yes':\n",
    "  r = np.linspace(1,3000,num=50)\n",
    "  print(\"\\n Enter the Properties\")\n",
    "  q = int(input(\"\\nFlow rate Q(STB/D)- \"))\n",
    "  u = int(input(\"\\nOil viscocity(cp)- \"))\n",
    "  B = 1.2 #bbl/stb\n",
    "  k = int(input(\"\\nPermeability(mD)- \"))\n",
    "  h = int(input(\"\\nReservoir thickness(ft)- \"))\n",
    "  Pe = 3000 #psi\n",
    "  rw = 0.5 #ft\n",
    "  DP = (141.2*q*u*B/(k*h))*(np.log(3000/r))\n",
    "  P = Pe - DP\n",
    "  p.append(P)\n",
    "  ans = input('\\n Want to try again? (yes/no)-')\n",
    "\n",
    "\n",
    "plt.figure(figsize=(10,6))\n",
    "for i in range(len(p)):\n",
    "  \n",
    "  plt.plot(r,p[i])\n",
    "  plt.xlim(1,3000)\n",
    "  plt.ylim(0,5000)\n",
    "  plt.xlabel('distance from the well,r(ft)--->')\n",
    "  plt.ylabel('Pressure P(psi)')\n",
    "  plt.legend(['case1','case2'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# You can clearly see how increasing the viscocity of oil increased the pressure drop by a huge margin.\n",
    "#in easy words, thicker the oil, more pressure it requires to move, more pressure it looses on its journey to the well."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
